2024-12-02T13:58:37.370+05:30  INFO 36984 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 36984 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T13:58:37.394+05:30 DEBUG 36984 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T13:58:37.400+05:30  INFO 36984 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T13:58:39.843+05:30  INFO 36984 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T13:58:40.156+05:30  INFO 36984 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 281 ms. Found 1 JPA repository interface.
2024-12-02T13:58:40.857+05:30  INFO 36984 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T13:58:40.870+05:30  INFO 36984 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T13:58:40.871+05:30  INFO 36984 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T13:58:40.948+05:30  INFO 36984 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T13:58:40.949+05:30  INFO 36984 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3455 ms
2024-12-02T13:58:40.992+05:30  INFO 36984 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T13:58:41.240+05:30  INFO 36984 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T13:58:41.245+05:30  INFO 36984 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T13:58:41.267+05:30  INFO 36984 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T13:58:41.321+05:30  INFO 36984 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T13:58:41.554+05:30  INFO 36984 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T13:58:41.710+05:30  INFO 36984 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T13:58:41.832+05:30  INFO 36984 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T13:58:42.278+05:30  INFO 36984 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T13:58:42.943+05:30  INFO 36984 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T13:58:42.976+05:30  INFO 36984 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T13:58:43.298+05:30 DEBUG 36984 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T13:58:43.352+05:30 DEBUG 36984 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T13:58:43.366+05:30 DEBUG 36984 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T13:58:43.387+05:30  INFO 36984 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T13:58:43.389+05:30  WARN 36984 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T13:58:43.428+05:30  WARN 36984 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T13:58:43.862+05:30 DEBUG 36984 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T13:58:43.945+05:30 DEBUG 36984 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T13:58:44.354+05:30  INFO 36984 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T13:58:44.362+05:30  INFO 36984 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 7.958 seconds (process running for 9.496)
2024-12-02T14:02:17.206+05:30  INFO 27852 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 27852 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T14:02:17.211+05:30 DEBUG 27852 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T14:02:17.214+05:30  INFO 27852 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T14:02:18.264+05:30  INFO 27852 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T14:02:18.465+05:30  INFO 27852 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 164 ms. Found 1 JPA repository interface.
2024-12-02T14:02:19.847+05:30  INFO 27852 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T14:02:19.897+05:30  INFO 27852 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T14:02:19.904+05:30  INFO 27852 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T14:02:20.101+05:30  INFO 27852 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T14:02:20.103+05:30  INFO 27852 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2817 ms
2024-12-02T14:02:20.167+05:30  INFO 27852 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T14:02:20.602+05:30  INFO 27852 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T14:02:20.607+05:30  INFO 27852 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T14:02:20.639+05:30  INFO 27852 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T14:02:20.718+05:30  INFO 27852 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T14:02:21.013+05:30  INFO 27852 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T14:02:21.137+05:30  INFO 27852 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T14:02:21.203+05:30  INFO 27852 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T14:02:21.780+05:30  INFO 27852 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T14:02:23.047+05:30  INFO 27852 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T14:02:23.084+05:30  INFO 27852 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T14:02:23.541+05:30 DEBUG 27852 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T14:02:23.630+05:30 DEBUG 27852 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T14:02:23.667+05:30 DEBUG 27852 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T14:02:23.710+05:30  INFO 27852 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T14:02:23.713+05:30  WARN 27852 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T14:02:23.800+05:30  WARN 27852 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T14:02:24.603+05:30 DEBUG 27852 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T14:02:24.765+05:30 DEBUG 27852 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T14:02:25.832+05:30  INFO 27852 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T14:02:25.859+05:30  INFO 27852 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 9.139 seconds (process running for 9.665)
2024-12-02T14:03:17.855+05:30  INFO 27852 --- [CRUD] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T14:03:17.856+05:30  INFO 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T14:03:17.859+05:30  INFO 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-12-02T14:03:17.871+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T14:03:17.878+05:30  WARN 27852 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T14:03:17.881+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:03:17.890+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T14:03:17.891+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@36813f93
2024-12-02T14:03:17.899+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T14:03:17.901+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T14:03:17.934+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:03:19.316+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T14:03:19.317+05:30  WARN 27852 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T14:03:19.318+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:03:19.319+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T14:03:19.319+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@36813f93
2024-12-02T14:03:19.321+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T14:03:19.322+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T14:03:19.332+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:08:35.189+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T14:08:35.190+05:30  WARN 27852 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T14:08:35.190+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:08:35.191+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T14:08:35.192+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@36813f93
2024-12-02T14:08:35.193+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T14:08:35.194+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T14:08:35.196+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:08:39.480+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T14:08:39.481+05:30  WARN 27852 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T14:08:39.482+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:08:39.483+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T14:08:39.484+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@36813f93
2024-12-02T14:08:39.486+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T14:08:39.487+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T14:08:39.498+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:08:39.564+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /favicon.ico
2024-12-02T14:08:39.565+05:30  WARN 27852 --- [CRUD] [http-nio-8080-exec-8] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T14:08:39.566+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:08:39.567+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T14:08:39.568+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@36813f93
2024-12-02T14:08:39.570+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T14:08:39.571+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T14:08:39.682+05:30 DEBUG 27852 --- [CRUD] [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T14:13:29.926+05:30  INFO 9356 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 9356 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T14:13:29.931+05:30 DEBUG 9356 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T14:13:29.934+05:30  INFO 9356 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T14:13:31.076+05:30  INFO 9356 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T14:13:31.576+05:30  INFO 9356 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 490 ms. Found 1 JPA repository interface.
2024-12-02T14:13:32.401+05:30  INFO 9356 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T14:13:32.427+05:30  INFO 9356 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T14:13:32.428+05:30  INFO 9356 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T14:13:32.630+05:30  INFO 9356 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T14:13:32.631+05:30  INFO 9356 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2632 ms
2024-12-02T14:13:32.724+05:30  INFO 9356 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T14:13:33.067+05:30  INFO 9356 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T14:13:33.071+05:30  INFO 9356 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T14:13:33.097+05:30  INFO 9356 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T14:13:33.175+05:30  INFO 9356 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T14:13:33.453+05:30  INFO 9356 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T14:13:33.541+05:30  INFO 9356 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T14:13:33.600+05:30  INFO 9356 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T14:13:33.984+05:30  INFO 9356 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T14:13:34.706+05:30  INFO 9356 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T14:13:34.738+05:30  INFO 9356 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T14:13:35.132+05:30 DEBUG 9356 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T14:13:35.239+05:30 DEBUG 9356 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T14:13:35.266+05:30 DEBUG 9356 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T14:13:35.301+05:30  INFO 9356 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T14:13:35.303+05:30  WARN 9356 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T14:13:35.366+05:30  WARN 9356 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T14:13:35.673+05:30 DEBUG 9356 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T14:13:35.720+05:30 DEBUG 9356 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T14:13:36.101+05:30  INFO 9356 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T14:13:36.113+05:30  INFO 9356 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 6.755 seconds (process running for 7.327)
2024-12-02T14:32:03.024+05:30  INFO 30532 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 30532 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T14:32:03.030+05:30 DEBUG 30532 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T14:32:03.033+05:30  INFO 30532 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T14:32:03.909+05:30  INFO 30532 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T14:32:04.075+05:30  INFO 30532 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 158 ms. Found 1 JPA repository interface.
2024-12-02T14:32:04.883+05:30  INFO 30532 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T14:32:04.917+05:30  INFO 30532 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T14:32:04.919+05:30  INFO 30532 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T14:32:05.024+05:30  INFO 30532 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T14:32:05.025+05:30  INFO 30532 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1916 ms
2024-12-02T14:32:05.075+05:30  INFO 30532 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T14:32:05.279+05:30  INFO 30532 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T14:32:05.281+05:30  INFO 30532 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T14:32:05.290+05:30  INFO 30532 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T14:32:05.330+05:30  INFO 30532 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T14:32:05.485+05:30  INFO 30532 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T14:32:05.596+05:30  INFO 30532 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T14:32:05.672+05:30  INFO 30532 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T14:32:06.099+05:30  INFO 30532 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T14:32:07.043+05:30  INFO 30532 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T14:32:07.103+05:30  INFO 30532 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T14:32:07.624+05:30 DEBUG 30532 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T14:32:07.712+05:30 DEBUG 30532 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T14:32:07.740+05:30 DEBUG 30532 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T14:32:07.765+05:30  INFO 30532 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T14:32:07.766+05:30  WARN 30532 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T14:32:07.811+05:30  WARN 30532 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T14:32:08.126+05:30 DEBUG 30532 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T14:32:08.203+05:30 DEBUG 30532 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T14:32:08.770+05:30  INFO 30532 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T14:32:08.783+05:30  INFO 30532 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 6.314 seconds (process running for 7.079)
2024-12-02T15:11:48.606+05:30  INFO 30532 --- [CRUD] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T15:11:48.607+05:30  INFO 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T15:11:48.608+05:30  INFO 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-12-02T15:11:48.623+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:11:48.629+05:30  WARN 30532 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:11:48.631+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:11:48.636+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:11:48.636+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@5051426e
2024-12-02T15:11:48.642+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:11:48.643+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:11:48.674+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:11:53.048+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:11:53.050+05:30  WARN 30532 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:11:53.051+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:11:53.053+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:11:53.054+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@5051426e
2024-12-02T15:11:53.056+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:11:53.056+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:11:53.062+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:16:08.139+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:16:08.139+05:30  WARN 30532 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:16:08.140+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:16:08.140+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:16:08.140+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@5051426e
2024-12-02T15:16:08.141+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:16:08.142+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:16:08.144+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:18:57.629+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:18:57.630+05:30  WARN 30532 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:18:57.630+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:18:57.631+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:18:57.632+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@5051426e
2024-12-02T15:18:57.633+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:18:57.633+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:18:57.635+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:08.578+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:19:08.580+05:30  WARN 30532 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:19:08.580+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:08.581+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:19:08.582+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@5051426e
2024-12-02T15:19:08.584+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:19:08.585+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:19:08.592+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:08.609+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:19:08.610+05:30  WARN 30532 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:19:08.611+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:08.613+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:19:08.615+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@5051426e
2024-12-02T15:19:08.619+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:19:08.620+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:19:08.624+05:30 DEBUG 30532 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:21.582+05:30  INFO 36656 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 36656 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T15:19:21.586+05:30 DEBUG 36656 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T15:19:21.589+05:30  INFO 36656 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T15:19:23.193+05:30  INFO 36656 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T15:19:23.361+05:30  INFO 36656 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 153 ms. Found 1 JPA repository interface.
2024-12-02T15:19:23.991+05:30  INFO 36656 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T15:19:24.010+05:30  INFO 36656 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T15:19:24.012+05:30  INFO 36656 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T15:19:24.293+05:30  INFO 36656 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T15:19:24.296+05:30  INFO 36656 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2642 ms
2024-12-02T15:19:24.424+05:30  INFO 36656 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T15:19:24.806+05:30  INFO 36656 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T15:19:24.814+05:30  INFO 36656 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T15:19:24.849+05:30  INFO 36656 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T15:19:24.923+05:30  INFO 36656 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T15:19:25.148+05:30  INFO 36656 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T15:19:25.344+05:30  INFO 36656 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T15:19:25.450+05:30  INFO 36656 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T15:19:25.945+05:30  INFO 36656 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T15:19:27.304+05:30  INFO 36656 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T15:19:27.358+05:30  INFO 36656 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T15:19:28.185+05:30 DEBUG 36656 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T15:19:28.350+05:30 DEBUG 36656 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T15:19:28.398+05:30 DEBUG 36656 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T15:19:28.450+05:30  INFO 36656 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T15:19:28.453+05:30  WARN 36656 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T15:19:28.520+05:30  WARN 36656 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T15:19:29.115+05:30 DEBUG 36656 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T15:19:29.233+05:30 DEBUG 36656 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T15:19:30.205+05:30  INFO 36656 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T15:19:30.238+05:30  INFO 36656 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 9.221 seconds (process running for 9.87)
2024-12-02T15:19:40.428+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T15:19:40.429+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T15:19:40.430+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-12-02T15:19:40.440+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T15:19:40.446+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:40.449+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T15:19:40.538+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan21ssada12sa1
2024-12-02T15:19:40.772+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : User registered with details: User{id=1, username='sudharsanan21ssada12sa1', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T15:19:40.775+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan21ssada12sa1 registered successfully.
2024-12-02T15:19:40.775+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User registered successfully: sudharsanan21ssada12sa1
2024-12-02T15:19:55.226+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T15:19:55.227+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:19:55.228+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T15:19:55.230+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan21ssada12sa1
2024-12-02T15:19:55.232+05:30  WARN 36656 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserService.registerUser() => Registration failed: User with username sudharsanan21ssada12sa1 already exists.
2024-12-02T15:19:55.233+05:30 ERROR 36656 --- [CRUD] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : Error registering user sudharsanan21ssada12sa1: User already exists
2024-12-02T15:20:00.005+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T15:20:00.007+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:20:00.008+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T15:20:00.012+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan21ssada12sa1
2024-12-02T15:20:00.348+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-3] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T15:20:00.398+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T15:20:00.429+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan21ssada12sa1
2024-12-02T15:20:00.429+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-3] c.e.spring.controller.UserController     : User sudharsanan21ssada12sa1 logged in successfully.
2024-12-02T15:39:04.299+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /
2024-12-02T15:39:04.300+05:30  WARN 36656 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T15:39:04.301+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T15:39:04.303+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T15:39:04.304+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@59201caa
2024-12-02T15:39:04.310+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T15:39:04.311+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T15:39:04.335+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:09:20.861+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T17:09:20.862+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:09:20.863+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T17:09:20.865+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan21ssada12sa1
2024-12-02T17:09:20.991+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T17:09:20.993+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:09:20.996+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan21ssada12sa1
2024-12-02T17:09:20.997+05:30  INFO 36656 --- [CRUD] [http-nio-8080-exec-6] c.e.spring.controller.UserController     : User sudharsanan21ssada12sa1 logged in successfully.
2024-12-02T17:09:47.216+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T17:09:47.217+05:30  WARN 36656 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T17:09:47.218+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:09:47.219+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T17:09:47.219+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@59201caa
2024-12-02T17:09:47.220+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T17:09:47.221+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T17:09:47.227+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:10:56.564+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /management/users
2024-12-02T17:10:56.565+05:30  WARN 36656 --- [CRUD] [http-nio-8080-exec-10] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T17:10:56.566+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:10:56.568+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T17:10:56.569+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@59201caa
2024-12-02T17:10:56.572+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /error
2024-12-02T17:10:56.573+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /error
2024-12-02T17:10:56.576+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:11:16.088+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T17:11:16.088+05:30  WARN 36656 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T17:11:16.089+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:11:16.090+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T17:11:16.090+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@59201caa
2024-12-02T17:11:16.091+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T17:11:16.091+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T17:11:16.095+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:12:21.666+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /microservice/management/users
2024-12-02T17:12:21.667+05:30  WARN 36656 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T17:12:21.667+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:12:21.667+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T17:12:21.667+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@59201caa
2024-12-02T17:12:21.668+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T17:12:21.668+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T17:12:21.670+05:30 DEBUG 36656 --- [CRUD] [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:15:23.562+05:30  INFO 38112 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 38112 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T17:15:23.565+05:30 DEBUG 38112 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T17:15:23.568+05:30  INFO 38112 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T17:15:24.405+05:30  INFO 38112 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T17:15:24.708+05:30  INFO 38112 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 289 ms. Found 1 JPA repository interface.
2024-12-02T17:15:25.736+05:30  INFO 38112 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T17:15:25.762+05:30  INFO 38112 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T17:15:25.763+05:30  INFO 38112 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T17:15:25.873+05:30  INFO 38112 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T17:15:25.874+05:30  INFO 38112 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2258 ms
2024-12-02T17:15:25.958+05:30  INFO 38112 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T17:15:26.300+05:30  INFO 38112 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T17:15:26.303+05:30  INFO 38112 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T17:15:26.315+05:30  INFO 38112 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T17:15:26.368+05:30  INFO 38112 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T17:15:26.617+05:30  INFO 38112 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T17:15:26.783+05:30  INFO 38112 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T17:15:26.899+05:30  INFO 38112 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T17:15:27.673+05:30  INFO 38112 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T17:15:28.821+05:30  INFO 38112 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T17:15:28.862+05:30  INFO 38112 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T17:15:29.428+05:30 DEBUG 38112 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T17:15:29.566+05:30 DEBUG 38112 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T17:15:29.603+05:30 DEBUG 38112 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T17:15:29.641+05:30  INFO 38112 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T17:15:29.644+05:30  WARN 38112 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T17:15:29.693+05:30  WARN 38112 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T17:15:30.187+05:30 DEBUG 38112 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T17:15:30.274+05:30 DEBUG 38112 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T17:15:30.993+05:30  INFO 38112 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T17:15:31.014+05:30  INFO 38112 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 8.062 seconds (process running for 8.69)
2024-12-02T17:16:50.572+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T17:16:50.573+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T17:16:50.574+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-12-02T17:16:50.591+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T17:16:50.599+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:16:50.603+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T17:16:50.696+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan21ssada12sa1
2024-12-02T17:16:51.008+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : User registered with details: User{id=1, username='sudharsanan21ssada12sa1', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T17:16:51.012+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan21ssada12sa1 registered successfully.
2024-12-02T17:16:51.012+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User registered successfully: sudharsanan21ssada12sa1
2024-12-02T17:16:54.916+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T17:16:54.917+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:16:54.918+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T17:16:54.920+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan21ssada12sa1
2024-12-02T17:16:55.334+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T17:16:55.376+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:16:55.417+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan21ssada12sa1
2024-12-02T17:16:55.418+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User sudharsanan21ssada12sa1 logged in successfully.
2024-12-02T17:23:06.932+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T17:23:06.934+05:30  WARN 38112 --- [CRUD] [http-nio-8080-exec-8] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T17:23:06.934+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:23:06.936+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T17:23:06.938+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@44bc3cc2
2024-12-02T17:23:06.946+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T17:23:06.947+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T17:23:06.954+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:23:46.413+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T17:23:46.414+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:23:46.414+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T17:23:46.415+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan12
2024-12-02T17:23:46.469+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.service.UserService   : User registered with details: User{id=2, username='sudharsanan12', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T17:23:46.470+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan12 registered successfully.
2024-12-02T17:23:46.470+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-6] c.e.spring.controller.UserController     : User registered successfully: sudharsanan12
2024-12-02T17:23:49.623+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T17:23:49.624+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:23:49.624+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T17:23:49.626+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-9] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan12
2024-12-02T17:23:49.739+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T17:23:49.739+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-9] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:23:49.741+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-9] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan12
2024-12-02T17:23:49.742+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-9] c.e.spring.controller.UserController     : User sudharsanan12 logged in successfully.
2024-12-02T17:24:03.525+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T17:24:03.526+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-10] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token; eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:03.528+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-10] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token:  eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:03.542+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-10] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:24:03.554+05:30 ERROR 38112 --- [CRUD] [http-nio-8080-exec-10] com.example.spring.config.JwtFilter      : Error extracting username from token. Cause: Compact JWT strings may not contain whitespace.
2024-12-02T17:24:03.581+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-10] com.example.spring.config.JwtFilter      : JwtFilter.handleUnauthorized(response, message) => message: Invalid or expired token.
2024-12-02T17:24:38.122+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T17:24:38.123+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.123+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.124+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:24:38.133+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.134+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao, username: sudharsanan12
2024-12-02T17:24:38.135+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan12
2024-12-02T17:24:38.157+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.158+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.158+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:24:38.159+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.160+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.161+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.161+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:24:38.163+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao
2024-12-02T17:24:38.163+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA0MjksImV4cCI6MTczNDc4MDY5MX0.nqNoxucaJyGe15gHEv1rxaLLKYTA_3fw0x7NNhNr1ao, expired: false
2024-12-02T17:24:38.164+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan12, valid: true
2024-12-02T17:24:38.165+05:30  INFO 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : User sudharsanan12 authenticated successfully.
2024-12-02T17:24:38.167+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:24:38.168+05:30 DEBUG 38112 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /management/users
2024-12-02T17:27:10.805+05:30  INFO 37844 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 37844 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T17:27:10.811+05:30 DEBUG 37844 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T17:27:10.817+05:30  INFO 37844 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T17:27:12.450+05:30  INFO 37844 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T17:27:12.770+05:30  INFO 37844 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 305 ms. Found 1 JPA repository interface.
2024-12-02T17:27:14.260+05:30  INFO 37844 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T17:27:14.295+05:30  INFO 37844 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T17:27:14.300+05:30  INFO 37844 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T17:27:14.480+05:30  INFO 37844 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T17:27:14.481+05:30  INFO 37844 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3549 ms
2024-12-02T17:27:14.568+05:30  INFO 37844 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T17:27:14.832+05:30  INFO 37844 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T17:27:14.834+05:30  INFO 37844 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T17:27:14.849+05:30  INFO 37844 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T17:27:14.879+05:30  INFO 37844 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T17:27:14.999+05:30  INFO 37844 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T17:27:15.060+05:30  INFO 37844 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T17:27:15.110+05:30  INFO 37844 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T17:27:15.521+05:30  INFO 37844 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T17:27:16.153+05:30  INFO 37844 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T17:27:16.181+05:30  INFO 37844 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T17:27:16.631+05:30 DEBUG 37844 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T17:27:16.728+05:30 DEBUG 37844 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T17:27:16.753+05:30 DEBUG 37844 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T17:27:16.781+05:30  INFO 37844 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T17:27:16.784+05:30  WARN 37844 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T17:27:16.842+05:30  WARN 37844 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T17:27:17.326+05:30 DEBUG 37844 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T17:27:17.389+05:30 DEBUG 37844 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T17:27:17.860+05:30  INFO 37844 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T17:27:17.870+05:30  INFO 37844 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 8.078 seconds (process running for 9.12)
2024-12-02T17:28:12.960+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T17:28:12.961+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T17:28:12.965+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-12-02T17:28:12.981+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T17:28:12.987+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:28:12.989+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T17:28:13.043+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan12
2024-12-02T17:28:13.237+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : User registered with details: User{id=1, username='sudharsanan12', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T17:28:13.241+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan12 registered successfully.
2024-12-02T17:28:13.242+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User registered successfully: sudharsanan12
2024-12-02T17:28:17.435+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T17:28:17.437+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:28:17.438+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T17:28:17.442+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan12
2024-12-02T17:28:17.853+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T17:28:17.898+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:17.936+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan12
2024-12-02T17:28:17.937+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User sudharsanan12 logged in successfully.
2024-12-02T17:28:37.704+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /students/all
2024-12-02T17:28:37.706+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.706+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.717+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /teachers/all
2024-12-02T17:28:37.718+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.718+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.728+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:37.728+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:37.757+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.757+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.758+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM, username: sudharsanan12
2024-12-02T17:28:37.758+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM, username: sudharsanan12
2024-12-02T17:28:37.758+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan12
2024-12-02T17:28:37.759+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan12
2024-12-02T17:28:37.831+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.834+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.837+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:37.835+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.838+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.839+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.838+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.840+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:37.840+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.841+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:37.841+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.842+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.845+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.846+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.846+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM, expired: false
2024-12-02T17:28:37.846+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:28:37.846+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan12, valid: true
2024-12-02T17:28:37.847+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User sudharsanan12 authenticated successfully.
2024-12-02T17:28:37.848+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM
2024-12-02T17:28:37.849+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIiLCJpYXQiOjE3MzMxNDA2OTcsImV4cCI6MTczNDc4MDk1OX0.VCqiTXmqhN6ky4s8BHVBA9nBdxlQicf8F2kzbhRO7WM, expired: false
2024-12-02T17:28:37.849+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan12, valid: true
2024-12-02T17:28:37.849+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : User sudharsanan12 authenticated successfully.
2024-12-02T17:28:37.850+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:28:37.850+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:28:37.851+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /students/all
2024-12-02T17:28:37.852+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /teachers/all
2024-12-02T17:30:24.895+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T17:30:24.896+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:30:24.896+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T17:30:24.898+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan12
2024-12-02T17:30:24.901+05:30  WARN 37844 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserService.registerUser() => Registration failed: User with username sudharsanan12 already exists.
2024-12-02T17:30:24.901+05:30 ERROR 37844 --- [CRUD] [http-nio-8080-exec-3] c.e.spring.controller.UserController     : Error registering user sudharsanan12: User already exists
2024-12-02T17:30:28.530+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T17:30:28.533+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:30:28.534+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T17:30:28.536+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-8] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan1232
2024-12-02T17:30:28.618+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-8] com.example.spring.service.UserService   : User registered with details: User{id=2, username='sudharsanan1232', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T17:30:28.619+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-8] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan1232 registered successfully.
2024-12-02T17:30:28.619+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-8] c.e.spring.controller.UserController     : User registered successfully: sudharsanan1232
2024-12-02T17:30:31.935+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T17:30:31.936+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T17:30:31.937+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T17:30:31.938+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-9] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan1232
2024-12-02T17:30:32.081+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T17:30:32.081+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-9] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:30:32.084+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-9] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan1232
2024-12-02T17:30:32.084+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-9] c.e.spring.controller.UserController     : User sudharsanan1232 logged in successfully.
2024-12-02T17:32:10.480+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /teachers/all
2024-12-02T17:32:10.480+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /students/all
2024-12-02T17:32:10.480+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.482+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.482+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.482+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.483+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.483+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.484+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.484+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.484+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, username: sudharsanan1232
2024-12-02T17:32:10.484+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, username: sudharsanan1232
2024-12-02T17:32:10.484+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan1232
2024-12-02T17:32:10.484+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan1232
2024-12-02T17:32:10.486+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.486+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.487+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.487+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.488+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.488+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.489+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.489+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.490+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.490+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.490+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.490+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.490+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.491+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.491+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.491+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.491+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, expired: false
2024-12-02T17:32:10.492+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, expired: false
2024-12-02T17:32:10.492+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan1232, valid: true
2024-12-02T17:32:10.492+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan1232, valid: true
2024-12-02T17:32:10.492+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : User sudharsanan1232 authenticated successfully.
2024-12-02T17:32:10.492+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : User sudharsanan1232 authenticated successfully.
2024-12-02T17:32:10.492+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:32:10.493+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:32:10.493+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /students/all
2024-12-02T17:32:10.493+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /teachers/all
2024-12-02T17:32:10.874+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /students/all
2024-12-02T17:32:10.874+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /teachers/all
2024-12-02T17:32:10.874+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.874+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.875+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.875+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.876+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.876+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.877+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.877+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.877+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, username: sudharsanan1232
2024-12-02T17:32:10.877+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, username: sudharsanan1232
2024-12-02T17:32:10.877+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan1232
2024-12-02T17:32:10.877+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan1232
2024-12-02T17:32:10.879+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.879+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.879+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.879+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.880+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.880+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.880+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.881+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.881+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.881+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.881+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.882+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.882+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.882+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T17:32:10.883+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.883+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY
2024-12-02T17:32:10.884+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, expired: false
2024-12-02T17:32:10.884+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMTIzMiIsImlhdCI6MTczMzE0MDgzMiwiZXhwIjoxNzM0NzgxMDkzfQ.-hc54pYgnYuMkXl-0eNSIEam1pEDvHPVO_7bH2KzkUY, expired: false
2024-12-02T17:32:10.884+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan1232, valid: true
2024-12-02T17:32:10.884+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan1232, valid: true
2024-12-02T17:32:10.884+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User sudharsanan1232 authenticated successfully.
2024-12-02T17:32:10.885+05:30  INFO 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : User sudharsanan1232 authenticated successfully.
2024-12-02T17:32:10.885+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:32:10.885+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T17:32:10.885+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /students/all
2024-12-02T17:32:10.885+05:30 DEBUG 37844 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /teachers/all
2024-12-02T19:12:20.263+05:30  INFO 15320 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 15320 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T19:12:20.269+05:30 DEBUG 15320 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T19:12:20.271+05:30  INFO 15320 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T19:12:21.982+05:30  INFO 15320 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T19:12:22.381+05:30  INFO 15320 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 379 ms. Found 1 JPA repository interface.
2024-12-02T19:12:24.015+05:30  INFO 15320 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T19:12:24.027+05:30  INFO 15320 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T19:12:24.029+05:30  INFO 15320 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T19:12:24.115+05:30  INFO 15320 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T19:12:24.116+05:30  INFO 15320 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3711 ms
2024-12-02T19:12:24.152+05:30  INFO 15320 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T19:12:24.360+05:30  INFO 15320 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T19:12:24.363+05:30  INFO 15320 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T19:12:24.375+05:30  INFO 15320 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T19:12:24.409+05:30  INFO 15320 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T19:12:24.535+05:30  INFO 15320 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T19:12:24.606+05:30  INFO 15320 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T19:12:24.652+05:30  INFO 15320 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T19:12:25.015+05:30  INFO 15320 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T19:12:25.676+05:30  INFO 15320 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T19:12:25.714+05:30  INFO 15320 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T19:12:26.062+05:30 DEBUG 15320 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T19:12:26.139+05:30 DEBUG 15320 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T19:12:26.153+05:30 DEBUG 15320 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T19:12:26.177+05:30  INFO 15320 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T19:12:26.180+05:30  WARN 15320 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T19:12:26.219+05:30  WARN 15320 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T19:12:26.505+05:30 DEBUG 15320 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T19:12:26.565+05:30 DEBUG 15320 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T19:12:27.073+05:30  INFO 15320 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T19:12:27.086+05:30  INFO 15320 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 7.697 seconds (process running for 8.469)
2024-12-02T19:12:39.322+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T19:12:39.323+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T19:12:39.324+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-12-02T19:12:39.337+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T19:12:39.342+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:12:39.345+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T19:12:39.414+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan21ssada12sa1
2024-12-02T19:12:39.601+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : User registered with details: User{id=1, username='sudharsanan21ssada12sa1', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T19:12:39.602+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan21ssada12sa1 registered successfully.
2024-12-02T19:12:39.603+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User registered successfully: sudharsanan21ssada12sa1
2024-12-02T19:12:43.975+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T19:12:43.976+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:12:43.977+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T19:12:43.978+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan21ssada12sa1
2024-12-02T19:12:44.310+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T19:12:44.341+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:12:44.371+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan21ssada12sa1
2024-12-02T19:12:44.371+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-3] c.e.spring.controller.UserController     : User sudharsanan21ssada12sa1 logged in successfully.
2024-12-02T19:13:10.226+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /students/all
2024-12-02T19:13:10.227+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.228+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /teachers/all
2024-12-02T19:13:10.228+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.229+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.231+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.258+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:13:10.258+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:13:10.290+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.290+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.291+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0, username: sudharsanan21ssada12sa1
2024-12-02T19:13:10.292+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0, username: sudharsanan21ssada12sa1
2024-12-02T19:13:10.292+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan21ssada12sa1
2024-12-02T19:13:10.292+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan21ssada12sa1
2024-12-02T19:13:10.326+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.328+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.328+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.328+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:13:10.329+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.330+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:13:10.330+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.331+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.331+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.332+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.333+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.333+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.334+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:13:10.334+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:13:10.336+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.336+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0
2024-12-02T19:13:10.337+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0, expired: false
2024-12-02T19:13:10.337+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ2OTY0LCJleHAiOjE3MzQ3ODcyMjV9.EwRGIJ9dtjPsIbYqvqcs-gzpDLv3hY6GQnCuJO-n-S0, expired: false
2024-12-02T19:13:10.338+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan21ssada12sa1, valid: true
2024-12-02T19:13:10.338+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan21ssada12sa1, valid: true
2024-12-02T19:13:10.339+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : User sudharsanan21ssada12sa1 authenticated successfully.
2024-12-02T19:13:10.339+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User sudharsanan21ssada12sa1 authenticated successfully.
2024-12-02T19:13:10.340+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T19:13:10.340+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T19:13:10.342+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /students/all
2024-12-02T19:13:10.342+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /teachers/all
2024-12-02T19:13:35.952+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T19:13:35.952+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T19:13:35.953+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:13:35.954+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T19:13:35.957+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@16c2e3b
2024-12-02T19:13:35.963+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:13:35.964+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:13:35.973+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:14:04.343+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /users/management/users
2024-12-02T19:14:04.344+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T19:14:04.344+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:14:04.345+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T19:14:04.346+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@16c2e3b
2024-12-02T19:14:04.348+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:14:04.349+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:14:04.355+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:14:08.524+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T19:14:08.526+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T19:14:08.526+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:14:08.528+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T19:14:08.528+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@16c2e3b
2024-12-02T19:14:08.530+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:14:08.532+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:14:08.535+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:15:42.879+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /users/login
2024-12-02T19:15:42.880+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:15:42.881+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /users/login
2024-12-02T19:15:42.885+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-10] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-12-02T19:15:42.888+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:15:42.889+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:15:42.892+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:15:45.774+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /users/login
2024-12-02T19:15:45.775+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:15:45.775+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /users/login
2024-12-02T19:15:45.776+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.verifyUser() => Authenticating user: sudharsanan21ssada12sa1
2024-12-02T19:15:45.894+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2024-12-02T19:15:45.896+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:15:45.898+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.verifyUser() => Token generated for user: sudharsanan21ssada12sa1
2024-12-02T19:15:45.899+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User sudharsanan21ssada12sa1 logged in successfully.
2024-12-02T19:16:09.999+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T19:16:10.001+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token; eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:10.001+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token:  eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:10.001+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:16:10.002+05:30 ERROR 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.config.JwtFilter      : Error extracting username from token. Cause: Compact JWT strings may not contain whitespace.
2024-12-02T19:16:10.004+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-3] com.example.spring.config.JwtFilter      : JwtFilter.handleUnauthorized(response, message) => message: Invalid or expired token.
2024-12-02T19:16:18.033+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T19:16:18.034+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.034+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.034+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:16:18.035+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.035+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8, username: sudharsanan21ssada12sa1
2024-12-02T19:16:18.036+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan21ssada12sa1
2024-12-02T19:16:18.038+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.039+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.039+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:16:18.041+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.042+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.043+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.044+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:16:18.045+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:16:18.046+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8, expired: false
2024-12-02T19:16:18.047+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan21ssada12sa1, valid: true
2024-12-02T19:16:18.048+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User sudharsanan21ssada12sa1 authenticated successfully.
2024-12-02T19:16:18.048+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T19:16:18.050+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /management/users
2024-12-02T19:16:49.300+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /microservice/management/users
2024-12-02T19:16:49.301+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-2] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T19:16:49.301+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:16:49.302+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T19:16:49.303+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@16c2e3b
2024-12-02T19:16:49.304+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:16:49.305+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:16:49.309+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:19:52.003+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /microservice/management/users
2024-12-02T19:19:52.005+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-5] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T19:19:52.006+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:19:52.007+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T19:19:52.008+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@16c2e3b
2024-12-02T19:19:52.010+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:19:52.011+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:19:52.015+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:22:40.574+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T19:22:40.574+05:30  WARN 15320 --- [CRUD] [http-nio-8080-exec-6] com.example.spring.config.JwtFilter      : Missing or malformed Authorization header.
2024-12-02T19:22:40.575+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:22:40.575+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-12-02T19:22:40.576+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] s.w.a.DelegatingAuthenticationEntryPoint : No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@16c2e3b
2024-12-02T19:22:40.576+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /error
2024-12-02T19:22:40.577+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /error
2024-12-02T19:22:40.579+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T19:22:44.116+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /management/users
2024-12-02T19:22:44.116+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.116+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.117+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:22:44.118+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.118+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : JwtFilter.getUsernameFromToken(token, response) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8, username: sudharsanan21ssada12sa1
2024-12-02T19:22:44.118+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : Attempting to authenticate user: sudharsanan21ssada12sa1
2024-12-02T19:22:44.121+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractUserName(token)=>token;eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.121+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.122+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:22:44.123+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.123+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractExpiration(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.124+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractAllClaims(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.124+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.getKey() => Retrieving secret key.
2024-12-02T19:22:44.125+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.extractClaim(token, claimResolver) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8
2024-12-02T19:22:44.126+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.isTokenExpired(token) => token: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiTUFOQUdFTUVOVCIsInN1YiI6InN1ZGhhcnNhbmFuMjFzc2FkYTEyc2ExIiwiaWF0IjoxNzMzMTQ3MTQ1LCJleHAiOjE3MzQ3ODc0MDd9.nXIjyWaFP2M0Sw2Gq_j-6sKap9KXSumSO9LFn6EJbE8, expired: false
2024-12-02T19:22:44.127+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.service.JWTService    : JWTService.validateToken(token, userDetails) => userName: sudharsanan21ssada12sa1, valid: true
2024-12-02T19:22:44.129+05:30  INFO 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : User sudharsanan21ssada12sa1 authenticated successfully.
2024-12-02T19:22:44.129+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] com.example.spring.config.JwtFilter      : User has role: MANAGEMENT
2024-12-02T19:22:44.130+05:30 DEBUG 15320 --- [CRUD] [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /management/users
2024-12-02T20:54:15.462+05:30  INFO 21220 --- [CRUD] [main] com.example.spring.ApplicationMain       : Starting ApplicationMain using Java 21.0.4 with PID 21220 (D:\New folder\CRUD-main\target\classes started by css160810 in D:\New folder\CRUD-main)
2024-12-02T20:54:15.466+05:30 DEBUG 21220 --- [CRUD] [main] com.example.spring.ApplicationMain       : Running with Spring Boot v3.3.2, Spring v6.1.11
2024-12-02T20:54:15.467+05:30  INFO 21220 --- [CRUD] [main] com.example.spring.ApplicationMain       : No active profile set, falling back to 1 default profile: "default"
2024-12-02T20:54:16.823+05:30  INFO 21220 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-02T20:54:17.363+05:30  INFO 21220 --- [CRUD] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 510 ms. Found 1 JPA repository interface.
2024-12-02T20:54:18.776+05:30  INFO 21220 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-02T20:54:18.810+05:30  INFO 21220 --- [CRUD] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-02T20:54:18.811+05:30  INFO 21220 --- [CRUD] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-12-02T20:54:18.917+05:30  INFO 21220 --- [CRUD] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-02T20:54:18.918+05:30  INFO 21220 --- [CRUD] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3369 ms
2024-12-02T20:54:18.967+05:30  INFO 21220 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-02T20:54:19.301+05:30  INFO 21220 --- [CRUD] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-12-02T20:54:19.306+05:30  INFO 21220 --- [CRUD] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-02T20:54:19.327+05:30  INFO 21220 --- [CRUD] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-12-02T20:54:19.385+05:30  INFO 21220 --- [CRUD] [main] com.example.spring.service.JWTService    : JWTService.JWTService() => Secret key generated successfully.
2024-12-02T20:54:19.763+05:30  INFO 21220 --- [CRUD] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-02T20:54:19.989+05:30  INFO 21220 --- [CRUD] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-12-02T20:54:20.152+05:30  INFO 21220 --- [CRUD] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-02T20:54:21.196+05:30  INFO 21220 --- [CRUD] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-02T20:54:23.699+05:30  INFO 21220 --- [CRUD] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-02T20:54:23.811+05:30  INFO 21220 --- [CRUD] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-02T20:54:24.714+05:30 DEBUG 21220 --- [CRUD] [main] com.example.spring.config.JwtFilter      : Filter 'jwtFilter' configured for use
2024-12-02T20:54:24.816+05:30 DEBUG 21220 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationManager() => Configuring authentication manager.
2024-12-02T20:54:24.861+05:30 DEBUG 21220 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.authenticationProvider() => Configuring authentication provider.
2024-12-02T20:54:24.944+05:30  INFO 21220 --- [CRUD] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-02T20:54:24.946+05:30  WARN 21220 --- [CRUD] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-12-02T20:54:25.065+05:30  WARN 21220 --- [CRUD] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-02T20:54:25.904+05:30 DEBUG 21220 --- [CRUD] [main] c.example.spring.config.SecurityConfig   : SecurityConfig.securityFilterChain() => Configuring security filter chain.
2024-12-02T20:54:26.152+05:30 DEBUG 21220 --- [CRUD] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-02T20:54:27.357+05:30  INFO 21220 --- [CRUD] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-02T20:54:27.382+05:30  INFO 21220 --- [CRUD] [main] com.example.spring.ApplicationMain       : Started ApplicationMain in 12.864 seconds (process running for 13.633)
2024-12-02T20:54:41.630+05:30  INFO 21220 --- [CRUD] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-02T20:54:41.631+05:30  INFO 21220 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-12-02T20:54:41.633+05:30  INFO 21220 --- [CRUD] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-12-02T20:54:41.650+05:30 DEBUG 21220 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /users/register
2024-12-02T20:54:41.663+05:30 DEBUG 21220 --- [CRUD] [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2024-12-02T20:54:41.666+05:30 DEBUG 21220 --- [CRUD] [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /users/register
2024-12-02T20:54:41.782+05:30 DEBUG 21220 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => Normalized username for registration: sudharsanan21ssada12sa1
2024-12-02T20:54:42.077+05:30 DEBUG 21220 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : User registered with details: User{id=1, username='sudharsanan21ssada12sa1', email='Management@gmail.com', role=MANAGEMENT}
2024-12-02T20:54:42.080+05:30  INFO 21220 --- [CRUD] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserService.registerUser() => User sudharsanan21ssada12sa1 registered successfully.
2024-12-02T20:54:42.080+05:30  INFO 21220 --- [CRUD] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User registered successfully: sudharsanan21ssada12sa1
